name: Deployment workflow

on:
  push:
    branches:
      - main

env:
  NODE_ENV: test
  PORT: ${{ secrets.PORT }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
  AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.AZURE_STORAGE_CONNECTION_STRING }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  lint_and_test:
    name: 'Lint and test'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      - name: 'Lint & test'
        run: |
          npm install --prefix ./packages/backend
          npm run lint --prefix ./packages/backend && npm run test --prefix ./packages/backend
          npm install --prefix ./packages/frontend
          npm run lint --prefix ./packages/frontend

  check_changes:
    name: 'Check for changes'
    runs-on: ubuntu-latest
    outputs:
      backend_changed: ${{ steps.changes.outputs.backend }}
      frontend_changed: ${{ steps.changes.outputs.frontend }}
    steps:
      - uses: actions/checkout@v2
      - name: 'Check for changes'
        uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            frontend:
              - packages/frontend/**
            backend:
              - packages/backend/**

  deploy_backend:
    if: ${{ needs.check_changes.outputs.backend_changed == 'true' }}
    name: Build and push
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./packages/backend/
          push: true
          tags: ollivarila/postbuddy-api:latest
      - name: Notify Azure about deployment
        run: curl -X POST ${{ secrets.AZURE_DEPLOYMENT_HOOK }} > /dev/null

  deploy_frontend:
    if: ${{ needs.check_changes.outputs.frontend_changed == 'true' }}
    name: Deploy frontend
    runs-on: ubuntu-latest
    needs: [lint_and_test, check_changes]
    steps:
      - uses: actions/checkout@v2
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        working-directory: ./packages/frontend
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        working-directory: ./packages/frontend
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy Project Artifacts to Vercel
        working-directory: ./packages/frontend
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  notify_if_failure:
    if: ${{ needs.deploy_backend.result == 'failure' || needs.deploy_frontend.result == 'failure' }}
    name: Notify if failure
    needs: [deploy_backend, deploy_frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Something failed
        if: ${{ needs.deploy_backend.result == 'failure' || needs.deploy_frontend.result == 'failure' }}
        uses: rjstone/discord-webhook-notify@v1
        with:
          severity: error
          details: Deployment failed
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}
